package com.user.management.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.junit.Before;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.user.management.exceptions.UserCreationException;
import com.user.management.model.User;
import com.user.management.repository.UserRepo;


@SpringBootTest
public class UserServiceImplTest {
	
	@Autowired
	private UserService userService;
	
	@MockBean
	private UserRepo userRepo;
	
	private List<User> userList;
	private User myUser;
	
	@BeforeEach
	public void setup() {
		userList=new ArrayList<User>();
		myUser=new User();
		myUser.setId(1);
		myUser.setUsername("username");
		myUser.setPassword("password");
		myUser.setRole("admin");
		
		when(userRepo.findAll()).thenReturn(userList);
		when(userRepo.findById(1)).thenReturn(Optional.of(myUser));
		when(userRepo.findById(2)).thenReturn(Optional.empty());
		when(userRepo.save(myUser)).thenReturn(myUser);
		when(userRepo.findByUsernameAndPassword("username", "password")).thenReturn(userList);
	}
	
	@Test
	public void getAllUserTest() {
		List<User> returnedList=userService.getAllUsers();
		assertEquals(userList, returnedList);
	}
	
	@Test
	public void createUserTest() {
		try {
			myUser.setId(2);
			boolean returnedValue=userService.createUser(myUser);
			assertEquals(true, returnedValue);
		} catch (UserCreationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	@Test
	public void loginTest() {
		boolean loginStatus=userService.login("username", "password");
		assertEquals(true, loginStatus);
	}
}
