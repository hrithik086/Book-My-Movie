package com.user.management.filter;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.filter.GenericFilterBean;

import com.user.management.service.UserService;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class JwtFilter extends GenericFilterBean{
	
	@Autowired
	UserService userService;

	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
			throws IOException, ServletException {
		
		HttpServletRequest myRequest=(HttpServletRequest) request;
		HttpServletResponse myResponse=(HttpServletResponse) response;
		
		String header=myRequest.getHeader("Authorization");
		
		if(header==null && !header.startsWith("bearer")) {
			throw new ServletException("header is missing or the header doesn't starts with bearer");
		}
		
		String jwtToken=header.substring(7);
		
		Claims claims = Jwts.parser()
							.setSigningKey("fse1")
							.parseClaimsJws(jwtToken)
							.getBody();
		myRequest.setAttribute("username", claims);
		
		System.out.println("The value of userService is "+userService);
		
		chain.doFilter(request, response);
	}
	
}
